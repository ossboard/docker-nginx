worker_processes  auto;
user root;
events {
    worker_connections  1024;
    multi_accept on;
    use epoll;
}
http {

    log_format  main  '$remote_addr $remote_user [$time_local] "$request" $status "$http_referer" "$http_user_agent"';
    access_log  /dev/stdout  main;
    error_log   stderr debug;

    #access_log  /tmp/stdout  main;
    #error_log   /tmp/stderr debug;

    # 보안패치(버전표기외)
    server_tokens off;
    proxy_pass_header Server;

    default_type  application/octet-stream;
    include       /usr/local/nginx/conf/mime.types;
    client_max_body_size 0;

    sendfile    on;
    tcp_nopush  on;
    tcp_nodelay on;

    ### cache
    vod_metadata_cache                 metadata_cache 16m;
    vod_response_cache                 response_cache 512m;
    vod_mapping_cache                   mapping_cache 5m;

    ### hls
    vod_last_modified_types            *;
    vod_segment_duration               1000;
    vod_align_segments_to_key_frames   on;
    vod_dash_fragment_file_name_prefix "segment";
    vod_hls_segment_file_name_prefix   "segment";
    vod_manifest_segment_durations_mode accurate;

    # gzip manifests
    gzip on;
    gzip_types application/vnd.apple.mpegurl;

    # file handle caching / aio
    open_file_cache          max=1000 inactive=5m;
    open_file_cache_valid    2m;
    open_file_cache_min_uses 1;
    open_file_cache_errors   on;
    aio on;

    server {
        listen 80;
        server_name 127.0.0.1;
        root /opt/static;
        proxy_redirect     off;
        proxy_set_header   Host             $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $remote_addr;
        proxy_buffering off;
        client_max_body_size    0;

        error_page 502 /error/502.html;
        error_page 503 /error/503.html;
        error_page 404 /error/404.html;

#       return 301 http://127.0.0.1$request_uri;
        location / {
            open_file_cache max=1 inactive=1m;
            alias /opt/static/ROOT/;
            expires -1;
            index index.html;
        }

        location /error/ {
            open_file_cache max=1 inactive=1m;
            alias /opt/static/error/;
            expires -1;
            index 503.html;
        }

        # 클라이언트
        location /darc/ {
            proxy_pass http://127.0.0.1:8000/darc/;
        } 

        # 서버(mam) 
        location /server/ {
            proxy_pass http://127.0.0.1:8100/server/;
        }
 
        # 스트리밍서버(통합)
        location /ss/ {
            proxy_pass http://127.0.0.1:8200/ss/;
        } 

        # 워크플로우
        location /wf/ {
            proxy_pass http://127.0.0.1:8300/wf/;
        } 

        # EX 
        location /ex/ {
            proxy_pass http://127.0.0.1:8400/ex/;
        } 

        # 트랜스코더
        location /tc/ {
            proxy_pass http://127.0.0.1:8500/tc/;
        } 

        # 카탈로거
        location /ca/ {
            proxy_pass http://127.0.0.1:8600/tc/;
        } 

        # 아카이브메니저
        location /am/ {
            proxy_pass http://127.0.0.1:8700/am/;
        } 

        # 트랜스퍼매니저
        location /tm/ {
            proxy_pass http://127.0.0.1:8800/tm/;
        } 

    }

    # 스트리밍서버(분리)
    server {
        listen 8200;
        server_name localhost;
        root /opt/static;

        proxy_hide_header Access-Control-Allow-Origin;
        add_header Access-Control-Allow-Headers '*';
        add_header Access-Control-Allow-Origin '*';
        add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
        proxy_buffering off;
        client_max_body_size    0;
        expires 1d;

        location /ss/PROXY/ {
            alias /opt/static/PROXY/;
            if ($request_method = OPTIONS ) {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        location /ss/hls/PROXY/ {
            alias /opt/static/PROXY/;
            vod hls;
            if ($request_method = OPTIONS ) {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        location /ss/thumb/PROXY/ {
            alias /opt/static/PROXY/;
            vod thumb;
            if ($request_method = OPTIONS ) {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

    }
    

}
